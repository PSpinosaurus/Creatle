@page "/answer/create"
@using BusinessLayer;
@using ServiceLayer;
@using Microsoft.Extensions.Logging;
@inject ILogger<Answer> logger;
@inject NavigationManager navigationManager;
@inject AnswerManager answerManager;
@inject GameManager gameManager;

<h3>Create Brand</h3>

<EditForm Model="@model" OnInvalidSubmit="HandleValidSubmit">

    <label for="gameId">Game Id</label>
    <InputNumber id="gameId" @bind-Value="model.GameId" autofocus />

    <label for="cateValueId">Category value Id</label>
    <InputNumber id="cateValueId" @bind-Value="model.CategoryValueId" />

    <label for="categoryId">Category Id</label>
    <InputNumber id="categoryId" @bind-Value="model.CategoryId" />

    <label for="date">Date</label>
    <InputDate id="date" @bind-Value="model.Date" />

    <button type="submit">Submit</button>

</EditForm>

@code
{
    private Answer model = new();

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await answerManager.CreateAsync(model);

            logger.Log(LogLevel.Information, "Brand created successfully!");

            navigationManager.NavigateTo("answer/index", false);
        }
        catch (Exception ex)
        {
            logger.Log(LogLevel.Error, ex.Message);
        }
    }
}
