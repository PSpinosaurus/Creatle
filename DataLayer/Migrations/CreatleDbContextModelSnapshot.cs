// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(CreatleDbContext))]
    partial class CreatleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessLayer.Answer", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriesId")
                        .HasColumnType("int");

                    b.HasKey("Date", "CategoryId", "GameId");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("GameId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("BusinessLayer.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BusinessLayer.CategoriesValues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.ToTable("CategoriesValues");
                });

            modelBuilder.Entity("BusinessLayer.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Colour")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BusinessLayer.HeroMetadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HeroMetadata");
                });

            modelBuilder.Entity("BusinessLayer.HeroProfile", b =>
                {
                    b.Property<int>("ValueId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int?>("HeroMetadataId")
                        .HasColumnType("int");

                    b.HasKey("ValueId", "GameId", "HeroId", "CategoryId");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("GameId");

                    b.HasIndex("HeroMetadataId");

                    b.ToTable("HeroProfiles");
                });

            modelBuilder.Entity("BusinessLayer.Answer", b =>
                {
                    b.HasOne("BusinessLayer.Categories", null)
                        .WithMany("Answers")
                        .HasForeignKey("CategoriesId");

                    b.HasOne("BusinessLayer.Game", null)
                        .WithMany("Answers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusinessLayer.CategoriesValues", b =>
                {
                    b.HasOne("BusinessLayer.Categories", null)
                        .WithMany("CategoriesValues")
                        .HasForeignKey("CategoriesId");
                });

            modelBuilder.Entity("BusinessLayer.HeroProfile", b =>
                {
                    b.HasOne("BusinessLayer.Categories", null)
                        .WithMany("HeroProfiles")
                        .HasForeignKey("CategoriesId");

                    b.HasOne("BusinessLayer.Game", null)
                        .WithMany("HeroesProfiles")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessLayer.HeroMetadata", null)
                        .WithMany("HeroProfiles")
                        .HasForeignKey("HeroMetadataId");
                });

            modelBuilder.Entity("BusinessLayer.Categories", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("CategoriesValues");

                    b.Navigation("HeroProfiles");
                });

            modelBuilder.Entity("BusinessLayer.Game", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("HeroesProfiles");
                });

            modelBuilder.Entity("BusinessLayer.HeroMetadata", b =>
                {
                    b.Navigation("HeroProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
