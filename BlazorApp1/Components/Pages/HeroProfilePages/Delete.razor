@page "/heroprofile/delete/{GameId:int}/{ValueId:int}/{HeroId:int}/{CategoryId:int}"
@inject ServiceLayer.HeroProfileManager DB
@using BusinessLayer
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<li>
    <h4>Answer</h4>
    <hr />
    @if (heroProfile is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">CategoryId</dt>
            <dd class="col-sm-10">@heroProfile.CategoryId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">GameId</dt>
            <dd class="col-sm-10">@heroProfile.GameId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">HeroId</dt>
            <dd class="col-sm-10">@heroProfile.HeroId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Value</dt>
            <dd class="col-sm-10">@heroProfile.ValueId</dd>
        </dl>
        <EditForm method="post" Model="heroProfile" OnValidSubmit="DeleteHeroProfile" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(heroProfile is null)">Delete</button> |
            <a href="/heroprofile">Back to List</a>
        </EditForm>
    }
</li>

@code {
    HeroProfile? heroProfile;
    object[] key;

    [Parameter]
    public int GameId { get; set; }

    [Parameter]
    public int CategoryId { get; set; }

    [Parameter]
    public int ValueId { get; set; }

    [Parameter]
    public int HeroId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        key = new object[] { GameId, CategoryId, ValueId, HeroId };
        heroProfile = await DB.ReadAsync(key, true);

        if (heroProfile is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteHeroProfile()
    {
        DB.DeleteAsync(key);
        NavigationManager.NavigateTo("/heroprofile/index");
    }
}
